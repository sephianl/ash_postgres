defmodule AshPostgres.TestRepo.Migrations.MigrateResources63 do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:posts_with_versions_versions, primary_key: false) do
      add(:id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true)
      add(:version_action_type, :text, null: false)
      add(:version_action_name, :text, null: false)
      add(:title, :text, null: false)
      add(:version_source_id, :uuid, null: false)
      add(:changes, :map)

      add(:version_inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
      )

      add(:version_updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
      )
    end

    create table(:posts_without_versions, primary_key: false) do
      add(:id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true)
      add(:title, :text, null: false)
      add(:title2, :text)

      add(:inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
      )

      add(:updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
      )
    end

    create table(:posts_with_versions, primary_key: false) do
      add(:id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true)
    end

    alter table(:posts_with_versions_versions) do
      modify(
        :version_source_id,
        references(:posts_with_versions,
          column: :id,
          name: "posts_with_versions_versions_version_source_id_fkey",
          type: :uuid,
          prefix: "public"
        )
      )
    end

    alter table(:posts_with_versions) do
      add(:title, :text, null: false)
      add(:title2, :text)

      add(:inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
      )

      add(:updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
      )
    end
  end

  def down do
    alter table(:posts_with_versions) do
      remove(:updated_at)
      remove(:inserted_at)
      remove(:title2)
      remove(:title)
    end

    drop(
      constraint(
        :posts_with_versions_versions,
        "posts_with_versions_versions_version_source_id_fkey"
      )
    )

    alter table(:posts_with_versions_versions) do
      modify(:version_source_id, :uuid)
    end

    drop(table(:posts_with_versions))

    drop(table(:posts_without_versions))

    drop(table(:posts_with_versions_versions))
  end
end
